[
  {
    "objectID": "Actus/8_ecriture_donnees.html",
    "href": "Actus/8_ecriture_donnees.html",
    "title": "Ecrire de la donn√©e avec dplyr",
    "section": "",
    "text": "En parquet (format privil√©gi√©) : write_parquet() =&gt; write_parquet(data, ‚Äúfichier.parquet‚Äù)\nEn csv : write.csv() =&gt; write.csv(data, ‚Äúfichier.csv‚Äù, row.names = FALSE)\nEn xlsx : write_xlsx() =&gt; write_xlsx(data, ‚Äúfichier.xlsx‚Äù)\nEn Rds (format R non interop√©rable) : saveRDS() =&gt; saveRDS(data, ‚Äúfichier.rds‚Äù)"
  },
  {
    "objectID": "Actus/5_lecture_donnees.html",
    "href": "Actus/5_lecture_donnees.html",
    "title": "Lecture des donn√©es",
    "section": "",
    "text": "üì¢ Aujourd‚Äôhui, on vous apprend √† lire des donn√©es en R ! Il existe plusieurs formats de r√©pr√©sentation des donn√©es :\nüîπ Fichiers plats (CSV, TXT, TSV, etc.)\nüëâ Utilisez read.csv(), read.table() ou fread() (plus rapide avec {data.table}).\nüîπ Fichiers Excel et formats sp√©cifiques (JSON, XML, YAML, etc.)\nüëâ Pour Excel : readxl::read_excel() ou openxlsx::read.xlsx().\nüëâ Pour JSON : jsonlite::fromJSON(), pour XML : xml2::read_xml(), et pour YAML : yaml::read_yaml().\nüîπ Bases de donn√©es\nüëâ Pour SQL : DBI::dbReadTable(), pour SQLite : RSQLite::dbReadTable(), ou encore RODBC::sqlQuery() pour l‚ÄôODBC.\nüîπ Web et HTML\nüëâ Pour lire du HTML : rvest::read_html() permet de scraper des pages web facilement.\nüëâ Vous pouvez aussi r√©cup√©rer des donn√©es via des API avec httr::GET().\nüîπ Parquet\nüëâ Utilisez arrow::read_parquet() ou arrow::open_dataset() pour lire des fichiers Parquet.\nüåü Astuce : Avec ces fonctions, vous pouvez ajuster le param√®tre memory = TRUE ou memory = FALSE.\n\nmemory = TRUE : Charge directement les donn√©es sous forme de data.frame dans R, ce qui est plus pratique si vous avez besoin de manipuler imm√©diatement l‚Äôensemble des donn√©es.\nmemory = FALSE : Permet d‚Äôeffectuer des op√©rations plus cibl√©es sans charger toute la table en m√©moire. Id√©al lorsque vous travaillez avec de tr√®s gros fichiers et souhaitez filtrer ou transformer les donn√©es avant de les charger en m√©moire √† l‚Äôaide de la fonction arrow::collect()\n\nBonus : La librairie RIO\nüëâ La librairie {rio} simplifie la lecture de fichiers dans diff√©rents formats, en offrant une m√©thode universelle avec rio::import() pour des fichiers CSV, Excel, JSON, SAS, et bien plus encore !\nüõ†Ô∏è Et vous, quel format utilisez-vous le plus ? üòä"
  },
  {
    "objectID": "Actus/2_rproj.html",
    "href": "Actus/2_rproj.html",
    "title": "Cr√©er un projet dans Rstudio : le fichier Rproj",
    "section": "",
    "text": "Cr√©er un projet RStudio permet d¬¥organiser tous vos scripts R et les fichiers (donn√©es, sorties‚Ä¶) relatifs √† un m√™me projet statistique. Un projet RStudio est un environnement isol√© qui √©vite les conflits entre diff√©rents scripts et packages de projets statistiques distincts.\n\nPour cr√©er un projet RStudio, il suffit d¬¥aller dans File &gt; New Project &gt; New Directory &gt; New Project &gt; (renseigner le nom de son projet, cliquer ¬´ git ¬ª et ¬´ renv ¬ª si besoin) &gt; Create Project\nRStudio va cr√©er un fichier .Rproj √† la racine du dossier du projet choisi, qui permet entre autres d‚Äôindiquer √† R que vous travaillez dans ce dossier (working directory). En double-cliquant sur le Rproj, RStudio s‚Äôouvre directement dans votre espace projet, et vous pouvez utiliser les chemins relatifs !\nEn haut √† droite de l‚Äôinterface RStudio, vous pouvez naviguer entre vos diff√©rents projets.\nPour la configuration du projet RStudio, il est conseill√© de ne pas sauvegarder l¬¥espace de travail (donn√©es en m√©moire visibles dans votre environnement), ni de le recharger, pour des raisons de reproductibilit√©.\n\n\n\n\nVue RStudio du Rproj\n\n\nSi vous voulez tester vos connaissances en R : Quiz2"
  },
  {
    "objectID": "Actus/10_duckdb.html",
    "href": "Actus/10_duckdb.html",
    "title": "Duckdb",
    "section": "",
    "text": "DuckDB est un logiciel qui permet de manipuler des donn√©es sans avoir √† tout charger en m√©moire, tout en r√©alisant des traitements statistiques efficaces. Il est particuli√®rement adapt√© au traitement de donn√©es de taille moyenne (de l‚Äôordre de 10 √† 100 Go), en ne chargeant en m√©moire que les donn√©es n√©cessaires. Pour cela, DuckDB s‚Äôappuie sur un moteur d‚Äôoptimisation (query optimizer) qui d√©termine la meilleure strat√©gie pour lire et traiter les fichiers de donn√©es de mani√®re performante.\nDeux mani√®res de commencer en R : 1. Utilisation de duckdb+duckplyr 2. Utilisation de duckdb+SQL/dplyr\n\n\n\n\nrenv::install(\"duckplyr\")\nlibrary(\"duckplyr\")\n\nflights_df_lazy &lt;- as_duckdb_tibble(flights_df())\n\nout &lt;-\nflights_df_lazy |&gt;\nfilter(!is.na(arr_delay), !is.na(dep_delay)) |&gt;\nmutate(inflight_delay = arr_delay - dep_delay) |&gt;\nsummarize(\n.by = c(year, month),\nmean_inflight_delay = mean(inflight_delay),\nmedian_inflight_delay = median(inflight_delay),\n) |&gt;\nfilter(month &lt;= 6)\n\nout |&gt;\nexplain()\n\nout |&gt;\ncollect()\n\n\n\ndb_exec(\"INSTALL httpfs\")\ndb_exec(\"LOAD httpfs\")\nflights &lt;- read_parquet_duckdb(urls)\n\n\nout &lt;-\nflights |&gt;\nmutate(InFlightDelay = ArrDelay - DepDelay) |&gt;\nsummarize(\n.by = c(Year, Month),\nMeanInFlightDelay = mean(InFlightDelay, na.rm = TRUE),\nMedianInFlightDelay = median(InFlightDelay, na.rm = TRUE),\n) |&gt;\nfilter(Year &lt; 2024)\nout |&gt;\nexplain()\n\n\n\n\n\nlibrary(\"duckdb\")\nlibrary(\"dplyr\")\nlibrary(\"arrow\")\ncon &lt;- dbConnect(duckdb())\n\n# 1. Lire et manipuler un csv\n# Ecriture de mtcars au format csv pour l'exemple\nwrite.csv(mtcars, \"mtcars.csv\")\n# avec dplyr (dbplyr)\ntbl(con, \"mtcars.csv\") |&gt;\ngroup_by(cyl) |&gt;\nsummarise(across(disp:wt, .fns = mean)) |&gt;\ncollect()\n# en SQL\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM read_csv(mtcars.csv)\"))\n# ou depuis la 1.3.0, duckdb d√©tecte automatiquement l'extension\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM mtcars.csv\"))\n\n\n# 2. Enregistrer et manipuler un tibble\n\nduckdb_register(con, \"flights\", nycflights13::flights)\ntbl(con, \"flights\") |&gt;\ngroup_by(dest) |&gt;\nsummarise(delay = mean(dep_time, na.rm = TRUE)) |&gt;\ncollect()\n\n# 3. Lire et manipuler un fichier parquet\n# Ecriture de mtcars au format parquet pour l'exemple\narrow::write_parquet(mtcars,sink=\"mtcars.parquet\")\nparquet_file &lt;- \"mtcars.parquet\"\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM parquet_scan('\", parquet_file, \"')\"))\n# Ou de depuis la 1.3.0 de DuckDB\nresult &lt;- dbGetQuery(con, \"SELECT * FROM mtcars.parquet\")\n\n\n# Z- conna√Ætre la version de Duckdb\nversion &lt;- dbGetQuery(con, \"SELECT version()\") # ou \"PRAGMA version;\"\nprint(version)\n\ndbDisconnect(con, shutdown = TRUE)\n\n\n\n\n # √† ajouter dans le .gitignore : \n*.duckdb*\n*.wal\n*.tmp"
  },
  {
    "objectID": "Actus/10_duckdb.html#utilisation-de-duckdbduckplyr",
    "href": "Actus/10_duckdb.html#utilisation-de-duckdbduckplyr",
    "title": "Duckdb",
    "section": "",
    "text": "renv::install(\"duckplyr\")\nlibrary(\"duckplyr\")\n\nflights_df_lazy &lt;- as_duckdb_tibble(flights_df())\n\nout &lt;-\nflights_df_lazy |&gt;\nfilter(!is.na(arr_delay), !is.na(dep_delay)) |&gt;\nmutate(inflight_delay = arr_delay - dep_delay) |&gt;\nsummarize(\n.by = c(year, month),\nmean_inflight_delay = mean(inflight_delay),\nmedian_inflight_delay = median(inflight_delay),\n) |&gt;\nfilter(month &lt;= 6)\n\nout |&gt;\nexplain()\n\nout |&gt;\ncollect()\n\n\n\ndb_exec(\"INSTALL httpfs\")\ndb_exec(\"LOAD httpfs\")\nflights &lt;- read_parquet_duckdb(urls)\n\n\nout &lt;-\nflights |&gt;\nmutate(InFlightDelay = ArrDelay - DepDelay) |&gt;\nsummarize(\n.by = c(Year, Month),\nMeanInFlightDelay = mean(InFlightDelay, na.rm = TRUE),\nMedianInFlightDelay = median(InFlightDelay, na.rm = TRUE),\n) |&gt;\nfilter(Year &lt; 2024)\nout |&gt;\nexplain()"
  },
  {
    "objectID": "Actus/10_duckdb.html#utilisation-de-duckdbsqldplyr",
    "href": "Actus/10_duckdb.html#utilisation-de-duckdbsqldplyr",
    "title": "Duckdb",
    "section": "",
    "text": "library(\"duckdb\")\nlibrary(\"dplyr\")\nlibrary(\"arrow\")\ncon &lt;- dbConnect(duckdb())\n\n# 1. Lire et manipuler un csv\n# Ecriture de mtcars au format csv pour l'exemple\nwrite.csv(mtcars, \"mtcars.csv\")\n# avec dplyr (dbplyr)\ntbl(con, \"mtcars.csv\") |&gt;\ngroup_by(cyl) |&gt;\nsummarise(across(disp:wt, .fns = mean)) |&gt;\ncollect()\n# en SQL\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM read_csv(mtcars.csv)\"))\n# ou depuis la 1.3.0, duckdb d√©tecte automatiquement l'extension\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM mtcars.csv\"))\n\n\n# 2. Enregistrer et manipuler un tibble\n\nduckdb_register(con, \"flights\", nycflights13::flights)\ntbl(con, \"flights\") |&gt;\ngroup_by(dest) |&gt;\nsummarise(delay = mean(dep_time, na.rm = TRUE)) |&gt;\ncollect()\n\n# 3. Lire et manipuler un fichier parquet\n# Ecriture de mtcars au format parquet pour l'exemple\narrow::write_parquet(mtcars,sink=\"mtcars.parquet\")\nparquet_file &lt;- \"mtcars.parquet\"\nresult &lt;- dbGetQuery(con, paste0(\"SELECT * FROM parquet_scan('\", parquet_file, \"')\"))\n# Ou de depuis la 1.3.0 de DuckDB\nresult &lt;- dbGetQuery(con, \"SELECT * FROM mtcars.parquet\")\n\n\n# Z- conna√Ætre la version de Duckdb\nversion &lt;- dbGetQuery(con, \"SELECT version()\") # ou \"PRAGMA version;\"\nprint(version)\n\ndbDisconnect(con, shutdown = TRUE)"
  },
  {
    "objectID": "Actus/10_duckdb.html#utile-pour-git",
    "href": "Actus/10_duckdb.html#utile-pour-git",
    "title": "Duckdb",
    "section": "",
    "text": "# √† ajouter dans le .gitignore : \n*.duckdb*\n*.wal\n*.tmp"
  },
  {
    "objectID": "Actus/6_structuration_projet.html",
    "href": "Actus/6_structuration_projet.html",
    "title": "Structuration des projets",
    "section": "",
    "text": "Une fois ton projet cr√©√© dans RStudio avec un fichier .Rproj, il est temps de passer √† la vitesse sup√©rieure : organiser proprement ton espace de travail.\nüîπ Dossier data/ : pour stocker tes donn√©es brutes. Attention, elles sont souvent sensibles, donc on √©vite de les versionner avec Git.\nüîπ Dossier R/ ou scripts/ : ici, tu ranges tous tes scripts R. Fini le code √©parpill√© !\nüîπ Dossier outputs/ : pour les r√©sultats g√©n√©r√©s par tes analyses. Tu peux m√™me le subdiviser :\noutputs/tmp/ pour les sorties temporaires (non suivies par Git),\noutputs/final/ pour les r√©sultats finaux (eux aussi souvent exclus de Git).\nüí° Une structure claire, c‚Äôest du temps gagn√©, moins d‚Äôerreurs, et une collaboration facilit√©e.\n\n\n\nExemple vu de Rstudio"
  },
  {
    "objectID": "Notebooks/1_tp_groupby_dplyr.html",
    "href": "Notebooks/1_tp_groupby_dplyr.html",
    "title": "TP group_by",
    "section": "",
    "text": "Ce TP permet d‚Äôapprendre √† produire des regroupements et des agr√©gats avec la librairie Dplyr"
  },
  {
    "objectID": "Notebooks/1_tp_groupby_dplyr.html#tp-group_by-avec-dplyr",
    "href": "Notebooks/1_tp_groupby_dplyr.html#tp-group_by-avec-dplyr",
    "title": "TP group_by",
    "section": "",
    "text": "Ce TP permet d‚Äôapprendre √† produire des regroupements et des agr√©gats avec la librairie Dplyr"
  },
  {
    "objectID": "Notebooks/1_tp_groupby_dplyr.html#pr√©requis",
    "href": "Notebooks/1_tp_groupby_dplyr.html#pr√©requis",
    "title": "TP group_by",
    "section": "Pr√©requis",
    "text": "Pr√©requis\nInstallation et chargement de Dplyr"
  },
  {
    "objectID": "Notebooks/1_tp_groupby_dplyr.html#les-fondamentaux-avec-dplyr",
    "href": "Notebooks/1_tp_groupby_dplyr.html#les-fondamentaux-avec-dplyr",
    "title": "TP group_by",
    "section": "Les fondamentaux avec Dplyr",
    "text": "Les fondamentaux avec Dplyr\nNous travaillerons avec le dataset iris\n\n\n\n\n\n\n\n\nRegardons les premiers individus de ce jeu de donn√©es\n\n\n\n\n\n\n\n\nNous avons quatre variables quantitatives (longueur et largeur du s√©pale, longueur et largeur de la p√©tale) et une variable cat√©gorielle (l‚Äôesp√®ce de l‚Äôiris)\n\n[illustration Wikipedia]\n\nCombien il y a d‚Äôesp√®ces d‚Äôiris dans le jeu de donn√©es ?\n\n\n\n\n\n\n\n\n\n\nCombien d‚Äôindividus par esp√®ce ?\n\n\n\n\n\n\n\n\n\nEn voil√† un jeu de donn√©es bien √©quilibr√© :)\nDplyr lit automatiquement les noms de variables √† l‚Äôint√©rieur des fonctions dplyr (dplyr::group_by, dplyr::count), il y a une ‚Äútraduction‚Äù automatique.\nA ce sujet, attention, la plupart du temps dplyr souhaite en g√©n√©ral les noms des variables sans ‚Äú‚Äù (√† de rares exceptions)\nUn aper√ßu des ‚Äúeffets de bord‚Äù que vous pouvez avoir avec des guillemets :\n\n\n\n\n\n\n\n\nIci, on s‚Äôen sort plut√¥t bien car c‚Äôest bien ce que nous souhaitons faire\n\n\n\n\n\n\n\n\nCela vaccine bien : il faut plut√¥t ne pas mettre de guillemets (sauf dans un √©ventuel by sur les jointures dplyr)\n\n\n\n\n\n\n\n\nSi nous reprenons notre objet de comptage comptage_group_by, nous pouvons nous apercevoir que c‚Äôest un objet tibble 3*2 et qu‚Äôil est actuellement group√© par ‚ÄúSpecies‚Äù. Toute op√©ration d‚Äôagr√©gat/groupe sera faite par rapport √† cette variable.\n\n\n\n\n\n\n\n\nVous pouvez voir le groupe aussi avec group_vars()\n\n\n\n\n\n\n\n\nPour d√©faire le group (et √©ventuellement regrouper avec une autre variable), nous pouvons utiliser la commande ungroup :\n\n\n\n\n\n\n\n\nRegroupons artificiellement √† l‚Äôaide de valeurs fictives les deux premi√®res esp√®ces en irisA, et le reste en irisB :\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLa fonction summarise est une fonction ‚Äúterminale‚Äù, elle synth√©tise et ‚Äúd√©groupe‚Äù d‚Äôune dimension\n(il est possible de garder les groupes avec .groups = \"keep\")"
  },
  {
    "objectID": "Notebooks/1_tp_groupby_dplyr.html#pour-aller-plus-loin",
    "href": "Notebooks/1_tp_groupby_dplyr.html#pour-aller-plus-loin",
    "title": "TP group_by",
    "section": "Pour aller plus loin :",
    "text": "Pour aller plus loin :\n\nsummarize peut s‚Äô√©crire aussi summarise (√ßa d√©pend si vous √™tes plut√¥t USA ou GB)\nSi vous avez termin√© vos op√©rations de groupe, il est plut√¥t conseill√© de revenir √† un jeu de donn√©es non group√© pour √©viter les erreurs\nDans le summarize, il n‚Äôest pas conseill√© de chainer les variables Si on reprend l‚Äôop√©ration pr√©c√©dente, en une fois dans le summarise, cela donne des r√©sultats √©tonnants\nComme en SQL (e.g having-count), vous pouvez filtrer les groupes selon des conditions sur ces dits-groupes\n\n\n\n\n\n\n\n\n\nExercice (√† vous de compl√©ter !) :\n\nCalculer les quantiles par esp√®ce d‚Äôiris sur la longueur des p√©tales\n\n\n\n\n\n\n\n\n\n\nGarder les esp√®ces dont la longueur moyenne des s√©pales est sup√©rieur √† 5.5\n\n\n\n\n\n\n\n\n\n\nEt calculer la longueur moyenne des p√©tales de ces esp√®ces"
  },
  {
    "objectID": "Quizs/2_rproj_quiz.html",
    "href": "Quizs/2_rproj_quiz.html",
    "title": "Cr√©er un projet dans Rstudio : le fichier Rproj - Quiz",
    "section": "",
    "text": "Quelle fonction peut √™tre utilis√©e pour lire un fichier CSV en R ?\n\n\nread.csv()\nimport.csv()\nload.csv()\nopen.csv()\n\n\nComment installer un package en R ?\n\n\ninstall.packages(‚Äúggplot2‚Äù)\nlibrary(ggplot2)\nrenv::install(‚Äúggplot2‚Äù)\nload.package(‚Äúggplot2‚Äù)\n\n\nQuelle fonction permet d‚Äôafficher les dimensions d‚Äôun dataframe df ?\n\n\nnrow(df)\nncol(df)\ndim(df)\nlength(df)\n\n\nQue retourne mean(c(2, NA, 4, 6), na.rm = TRUE) ?\n\n\nNA\n4\n3.5\n12"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Newslett'R",
    "section": "",
    "text": "Newslett‚ÄôR\n\nChaque semaine, nous vous proposons une astuce en R, accompagn√©e de quiz et d‚Äôexercices, pour tous les niveaux ‚Äì d√©butant, avanc√© ou expert ‚Äì afin de perfectionner votre ma√Ætrise de R.\n\n\n\nStar this website on Github\n\n\n\nLes derni√®res newslett‚ÄôR : \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLes raccourcis R avec Rstudio\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nMar 14, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nCr√©er un projet dans Rstudio : le fichier Rproj\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nMar 21, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nAides-m√©moires\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nApr 4, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nAide-m√©moire SAS-R\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nApr 25, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nLecture des donn√©es\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nJun 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nStructuration des projets\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nJun 19, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nStatistiques de base avec dplyr\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nJun 20, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nEcrire de la donn√©e avec dplyr\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nJul 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nTransformer des variables avec across\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nJul 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\nDuckdb\n\n\n\nNewsletter\n\n\n\n\n\n\n\n\n\n\nSep 5, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "ressources.html",
    "href": "ressources.html",
    "title": "Newslett'R",
    "section": "",
    "text": "utilitR\nAide-m√©moire SAS - R - pandas"
  },
  {
    "objectID": "ressources.html#pour-en-savoir-plus-sur-r",
    "href": "ressources.html#pour-en-savoir-plus-sur-r",
    "title": "Newslett'R",
    "section": "",
    "text": "utilitR\nAide-m√©moire SAS - R - pandas"
  },
  {
    "objectID": "Exercices/1_group_by.html",
    "href": "Exercices/1_group_by.html",
    "title": "Apprendre le group_by de dplyr",
    "section": "",
    "text": "Exercice group_by"
  },
  {
    "objectID": "Quizs/1_raccourcis_Rstudio_quiz.html",
    "href": "Quizs/1_raccourcis_Rstudio_quiz.html",
    "title": "Les raccourcis R avec Rstudio - Quiz",
    "section": "",
    "text": "Comment appelle-t-on un tableau bidimensionnel en R ?\n\n\nDataFrame\nVector\nMatrix\nArray\n\n\nQuel symbole est utilis√© pour assigner une valeur √† une variable en R ?\n\n\n=\n-&gt;\n&lt;-\n:\n\n\nQuelle commande permet d¬¥afficher les premi√®res lignes d‚Äôun DataFrame en R ?\n\n\nview()\nhead()\ntop()\nsummary()\n\n\nQuel package est c√©l√®bre pour la manipulation de donn√©es en R ?\n\n\nggplot2\ndplyr\nshiny\nknitr"
  },
  {
    "objectID": "Actus/4_aide_memoire.html",
    "href": "Actus/4_aide_memoire.html",
    "title": "Aide-m√©moire SAS-R",
    "section": "",
    "text": "Le saviez-vous ? Un aide-m√©moire est disponible pour vous guider dans la conversion de code SAS vers d‚Äôautres langages tels que R, DuckDB et Python. Retrouvez-le √† cette adresse Aide-m√©moire SAS - R - pandas] ! Ce guide est √©galement collaboratif : vous pouvez y contribuer en proposant de nouvelles traductions, en l‚Äôenrichissant ou en corrigeant d‚Äô√©ventuelles erreurs. N‚Äôh√©sitez pas √† participer !"
  },
  {
    "objectID": "Actus/9_transformer_across.html",
    "href": "Actus/9_transformer_across.html",
    "title": "Transformer des variables avec across",
    "section": "",
    "text": "Depuis dplyr 1.0, certaines fonctions comme mutate_at(), mutate_if(), mutate_all() sont d√©pr√©ci√©es au profit de la fonction plus polyvalente across(). Elle permet d‚Äôappliquer facilement des op√©rations √† plusieurs colonnes selon des crit√®res pr√©cis dans mutate(), summarise(), filter() etc.\nlibrary(dplyr)\n# Exemple iris : calculer le carr√© de toutes les colonnes num√©riques\ndatasets::iris %&gt;% mutate(across(where(is.numeric), ~ .x^2))\nDans la fonction across(), on peut passer une fonction anonyme pour d√©finir la transformation √† appliquer √† chaque colonne s√©lectionn√©e. Cette fonction anonyme est √©crite avec la syntaxe tilde (~).\n‚Ä¢ Le tilde ~ signifie ‚Äúfonction anonyme‚Äù. ‚Ä¢ .x repr√©sente la colonne en cours de traitement. ‚Ä¢ Donc, ~ .x ^2 signifie ¬´ pour chaque valeur dans la colonne, calcule son carr√© ¬ª.\n# Exemple : diviser par 2 uniquement les colonnes qui commencent par \"Petal\"\ndatasets::iris %&gt;%  mutate(across(starts_with(\"Petal\"), ~ .x / 2))\n# Multiplier par 10 toutes les colonnes sauf Species\ndatasets::iris %&gt;%  mutate(across(-Species, ~ .x * 10))\nRemarque : across conserve les noms originaux des colonnes en les transformant.\nOn peut aussi utiliser everything() pour s√©lectionner toutes les colonnes : il est souvent utilis√© dans select()\n# R√©ordonner en mettant Species en premier, puis tout le reste\ndatasets::iris %&gt;%  select(Species, everything())"
  },
  {
    "objectID": "Actus/3_sheet_cheat.html",
    "href": "Actus/3_sheet_cheat.html",
    "title": "Aides-m√©moires",
    "section": "",
    "text": "Il existe de nombreuses cheat sheets (aide m√©moire en format poster) pour vous aider. Voici quelques-unes de nos pr√©f√©r√©es :\n\nBase R Cheat Sheet\nDplyr (en fran√ßais)\nGgplot2 (en fran√ßais)\nLubridate (gestion des dates en R)\nSQL Basics Cheat Sheet\nStringr (manipulation de cha√Æne de caract√®res et expressions r√©guli√®res)\n\nN‚Äôh√©sitez pas √† les consulter et √† les partager !"
  },
  {
    "objectID": "Actus/7_stat_dplyr.html",
    "href": "Actus/7_stat_dplyr.html",
    "title": "Statistiques de base avec dplyr",
    "section": "",
    "text": "filter() = Filtrer des lignes\nselect() = S√©lectionner des colonnes\nmutate() = Cr√©er de nouvelles variables\nsummarise() = Calculer des statistiques r√©sum√©es\ngroup_by() = Grouper avant de r√©sumer\narrange() = Trier des lignes\n\nExemple pour le summarise :\n\ndata %&gt;%\n  summarise(\n    mean_var = mean(ma_variable, na.rm = TRUE),\n    median_var = median(ma_variable, na.rm = TRUE)\n    min_var = min(ma_variable, na.rm = TRUE),\n    max_var = max(ma_variable, na.rm = TRUE),\n    sd_var = sd(ma_variable, na.rm = TRUE),\n    n_obs = n()\n)\nPour plus d‚Äôinformations pour les fonctions utilisables dans le summarise : Documentation dplyr\net vous, quelle est votre fonction pr√©f√©r√©e ?"
  },
  {
    "objectID": "Actus/1_raccourcis_Rstudio.html",
    "href": "Actus/1_raccourcis_Rstudio.html",
    "title": "Les raccourcis R avec Rstudio",
    "section": "",
    "text": "Boostez votre productivit√© sur RStudio avec ces 10 raccourcis indispensables ! Ex√©cutez du code en un clin d‚Äô≈ìil, naviguez rapidement entre les fichiers, formatez votre script proprement et commentez en un geste. Que vous soyez d√©butant ou expert, ces raccourcis vous feront gagner un temps pr√©cieux et optimiseront votre workflow. üöÄüí°\n\n\n\nRaccourcis R Studio\n\n\nSi vous voulez tester vos connaissances en R : Quiz1"
  }
]